openapi: 3.0.0
info:
    title: Example API
    description: Generated by astra
    contact: {}
    license:
        name: ""
    version: 1.0.0
servers:
    - url: http://localhost:8000
paths:
    /health:
        get:
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/gin.H'
    /posts/{id}/json:
        get:
            operationId: getPostJson
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.Post'
                "400":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.Error'
        put:
            operationId: updatePostJson
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/types.json.PostDTO'
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.json.Operation'
                "400":
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: string
        delete:
            operationId: deletePostJson
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.json.Operation'
                "400":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.Error'
    /posts/{id}/yaml:
        get:
            operationId: getPostYaml
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: ""
                    content:
                        application/yaml:
                            schema:
                                $ref: '#/components/schemas/types.Post'
                "400":
                    description: ""
                    content:
                        application/yaml:
                            schema:
                                $ref: '#/components/schemas/types.Error'
        put:
            operationId: updatePostYaml
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/yaml:
                        schema:
                            $ref: '#/components/schemas/types.json.PostDTO'
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.json.Operation'
                "400":
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: string
        delete:
            operationId: deletePostYaml
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: ""
                    content:
                        application/yaml:
                            schema:
                                $ref: '#/components/schemas/types.yaml.Operation'
                "400":
                    description: ""
                    content:
                        application/yaml:
                            schema:
                                $ref: '#/components/schemas/types.Error'
    /posts/json:
        get:
            operationId: getPostsJson
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/types.Post'
        post:
            operationId: createPostJson
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/types.json.PostDTO'
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.json.Operation'
                "400":
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: string
    /posts/yaml:
        get:
            operationId: getPostsYaml
            responses:
                "200":
                    description: ""
                    content:
                        application/yaml:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/types.Post'
        post:
            operationId: createPostYaml
            requestBody:
                content:
                    application/yaml:
                        schema:
                            $ref: '#/components/schemas/types.yaml.PostDTO'
            responses:
                "200":
                    description: ""
                    content:
                        application/yaml:
                            schema:
                                $ref: '#/components/schemas/types.yaml.Operation'
                "400":
                    description: ""
                    content:
                        application/yaml:
                            schema:
                                type: string
components:
    schemas:
        gin.H:
            type: object
            additionalProperties: {}
        time.Time:
            type: string
            format: date-time
        types.Comment:
            type: object
            properties:
                author:
                    $ref: '#/components/schemas/types.yaml.Author'
                body:
                    type: string
                id:
                    type: integer
                    format: int32
        types.Error:
            type: object
            properties:
                details:
                    type: string
                error:
                    type: string
        types.OperationType:
            enum:
                - create
                - update
                - delete
            type: string
        types.Post:
            type: object
            allOf:
                - $ref: '#/components/schemas/types.PostID'
                - properties:
                    author:
                        $ref: '#/components/schemas/types.yaml.Author'
                    body:
                        type: string
                    comments:
                        type: array
                        items:
                            $ref: '#/components/schemas/types.Comment'
                    name:
                        type: string
                    publishedAt:
                        $ref: '#/components/schemas/time.Time'
        types.PostID:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
        types.json.Author:
            type: object
            properties:
                first_name:
                    type: string
                id:
                    type: integer
                    format: int32
                last_name:
                    type: string
        types.json.Operation:
            type: object
            properties:
                entity_id:
                    type: integer
                    format: int32
                entity_type:
                    type: string
                operation:
                    $ref: '#/components/schemas/types.OperationType'
        types.json.PostDTO:
            type: object
            properties:
                author_id:
                    type: integer
                    format: int32
                body:
                    type: string
                name:
                    type: string
        types.yaml.Author:
            type: object
            properties:
                firstName:
                    type: string
                id:
                    type: integer
                    format: int32
                lastName:
                    type: string
        types.yaml.Operation:
            type: object
            properties:
                entityID:
                    type: integer
                    format: int32
                entityType:
                    type: string
                operation:
                    $ref: '#/components/schemas/types.OperationType'
        types.yaml.PostDTO:
            type: object
            properties:
                authorID:
                    type: integer
                    format: int32
                body:
                    type: string
                name:
                    type: string
