openapi: 3.0.0
info:
    title: Example API with GORM
    description: Generated by astra
    contact: {}
    license:
        name: ""
    version: 1.0.0
servers:
    - url: http://localhost:8000
paths:
    /health:
        get:
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/gin.H'
    /posts:
        get:
            operationId: getPosts
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/types.Post'
                "500":
                    description: ""
                    content:
                        text/plain:
                            schema:
                                type: string
        post:
            operationId: createPost
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/types.PostDTO'
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.Post'
                "400":
                    description: ""
                    content:
                        text/plain:
                            schema:
                                type: string
                "500":
                    description: ""
                    content:
                        text/plain:
                            schema:
                                type: string
    /posts/{id}:
        get:
            operationId: getPost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.Post'
                "400":
                    description: ""
                    content:
                        text/plain:
                            schema:
                                type: string
                "500":
                    description: ""
                    content:
                        text/plain:
                            schema:
                                type: string
        put:
            operationId: updatePost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/types.PostDTO'
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/types.Post'
                "400":
                    description: ""
                    content:
                        text/plain:
                            schema:
                                type: string
                "500":
                    description: ""
                    content:
                        text/plain:
                            schema:
                                type: string
        delete:
            operationId: deletePost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: ""
                "400":
                    description: ""
                    content:
                        text/plain:
                            schema:
                                type: string
                "500":
                    description: ""
                    content:
                        text/plain:
                            schema:
                                type: string
components:
    schemas:
        gin.H:
            type: object
            additionalProperties:
                type: object
        gorm.DeletedAt:
            type: object
            properties:
                Time:
                    $ref: '#/components/schemas/time.Time'
                Valid:
                    type: boolean
        gorm.Model:
            type: object
            properties:
                CreatedAt:
                    $ref: '#/components/schemas/time.Time'
                DeletedAt:
                    $ref: '#/components/schemas/gorm.DeletedAt'
                ID:
                    type: integer
                    format: uint
                UpdatedAt:
                    $ref: '#/components/schemas/time.Time'
        time.Time:
            type: string
            format: date-time
        types.Author:
            type: object
            allOf:
                - $ref: '#/components/schemas/gorm.Model'
                - properties:
                    first_name:
                        type: string
                    last_name:
                        type: string
        types.Comment:
            type: object
            allOf:
                - $ref: '#/components/schemas/gorm.Model'
                - properties:
                    author:
                        $ref: '#/components/schemas/types.Author'
                    body:
                        type: string
        types.Post:
            type: object
            allOf:
                - $ref: '#/components/schemas/gorm.Model'
                - properties:
                    author:
                        $ref: '#/components/schemas/types.Author'
                    body:
                        type: string
                    comments:
                        type: array
                        items:
                            type: array
                    name:
                        type: string
                    published_at:
                        $ref: '#/components/schemas/time.Time'
        types.PostDTO:
            type: object
            properties:
                author_id:
                    type: integer
                    format: uint
                body:
                    type: string
                name:
                    type: string
